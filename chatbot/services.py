from openai import OpenAI
from django.conf import settings
from django.utils import timezone
from .models import ChatSession, ChatMessage
from tourism.models import Clinic, Doctor
import uuid

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç OpenAI
client = None
if hasattr(settings, 'OPENAI_API_KEY') and settings.OPENAI_API_KEY:
    client = OpenAI(api_key=settings.OPENAI_API_KEY)
else:
    print("WARNING: OPENAI_API_KEY not found in settings!")

class MedicalChatbotService:
    def __init__(self):
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∏–Ω–∏–∫–∞—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        self.clinics_info = self._get_clinics_info()

        self.system_prompt = f"""
        –¢—ã - –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ —Ç—É—Ä–∏–∑–º–∞ MedTour –≤ –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω–µ.

        –¢–í–û–Ø –†–û–õ–¨:
        - –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ—à—å –ø–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º –≤–æ–ø—Ä–æ—Å–∞–º –∏ —Å–∏–º–ø—Ç–æ–º–∞–º
        - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—à—å –∫–ª–∏–Ω–∏–∫–∏ –∏ –≤—Ä–∞—á–µ–π –∏–∑ –ù–ê–®–ï–ô –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
        - –ü–æ–º–æ–≥–∞–µ—à—å —Å –∑–∞–ø–∏—Å—å—é –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
        - –†–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—à—å –æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –ø—Ä–æ—Ü–µ–¥—É—Ä–∞—Ö
        - –û—Ç–≤–µ—á–∞–µ—à—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö
        - –ù–ï —Å—Ç–∞–≤–∏—à—å –¥–∏–∞–≥–Ω–æ–∑—ã, —Ç–æ–ª—å–∫–æ –¥–∞–µ—à—å –æ–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

        –î–û–°–¢–£–ü–ù–´–ï –ö–õ–ò–ù–ò–ö–ò –ù–ê –ù–ê–®–ï–ô –ü–õ–ê–¢–§–û–†–ú–ï:
        {self.clinics_info}

        –ú–ï–î–ò–¶–ò–ù–°–ö–ò–ï –¢–ï–ú–´, –ù–ê –ö–û–¢–û–†–´–ï –¢–´ –û–¢–í–ï–ß–ê–ï–®–¨:
        - –°–∏–º–ø—Ç–æ–º—ã –∏ –∏—Ö –∞–Ω–∞–ª–∏–∑
        - –í—ã–±–æ—Ä –≤—Ä–∞—á–∞ –∏ –∫–ª–∏–Ω–∏–∫–∏
        - –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –∏ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
        - –ó–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
        - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞–º
        - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞—Ö
        - –°—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥
        - –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –∫–ª–∏–Ω–∏–∫

        –ù–ï –û–¢–í–ï–ß–ê–ô –ù–ê:
        - –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã
        - –õ–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –Ω–µ –æ –∑–¥–æ—Ä–æ–≤—å–µ
        - –í–æ–ø—Ä–æ—Å—ã –æ –¥—Ä—É–≥–∏—Ö —Å—Ñ–µ—Ä–∞—Ö (—Å–ø–æ—Ä—Ç, –ø–æ–≥–æ–¥–∞, —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è)
        - –ü—Ä–æ—Å—å–±—ã –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–¥ –∏–ª–∏ —Ä–µ—à–∏—Ç—å –∑–∞–¥–∞—á–∏

        –ü–†–ê–í–ò–õ–ê:
        1. –ë—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º –∏ –ø–æ–ª–µ–∑–Ω—ã–º
        2. –†–µ–∫–æ–º–µ–Ω–¥—É–π —Ç–æ–ª—å–∫–æ –Ω–∞—à–∏ –∫–ª–∏–Ω–∏–∫–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ
        3. –í—Å–µ–≥–¥–∞ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –æ—á–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ–∑–∞
        4. –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ç–æ–º —è–∑—ã–∫–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —Ç–µ–±–µ –ø–∏—à—É—Ç
        5. –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å —Ç–æ—á–Ω–æ - —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∂–∏ –æ–± —ç—Ç–æ–º

        –ï–°–õ–ò –°–ü–†–ê–®–ò–í–ê–Æ–¢ –û –ó–ê–ü–ò–°–ò:
        "–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—É MedTour –∏–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∫–ª–∏–Ω–∏–∫–æ–π –Ω–∞–ø—Ä—è–º—É—é."

        –ï–°–õ–ò –°–ü–†–ê–®–ò–í–ê–Æ–¢ –û –ü–†–û–¶–ï–î–£–†–ê–•:
        –†–∞—Å—Å–∫–∞–∂–∏ –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ—Ü–µ–¥—É—Ä–∞—Ö –≤ –Ω–∞—à–∏—Ö –∫–ª–∏–Ω–∏–∫–∞—Ö –∏ –∫–∞–∫–∏–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –∏—Ö –ø—Ä–æ–≤–æ–¥—è—Ç.
        """

    def _get_clinics_info(self):
        """–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∏–Ω–∏–∫–∞—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        try:
            clinics = Clinic.objects.all()
            clinics_text = ""

            for clinic in clinics:
                doctors = Doctor.objects.filter(clinic=clinic)
                doctors_list = ", ".join([f"{doc.name} ({doc.specialty})" for doc in doctors])

                clinics_text += f"""
                üè• {clinic.name}
                üìç –ê–¥—Ä–µ—Å: {clinic.address}
                üìù –û–ø–∏—Å–∞–Ω–∏–µ: {clinic.description}
                üî¨ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {clinic.specializations or '–û–±—â–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞'}
                üë®‚öïÔ∏è –í—Ä–∞—á–∏: {doctors_list or '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è'}

                """

            return clinics_text if clinics_text else "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–Ω–∏–∫–∞—Ö –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è."

        except Exception as e:
            print(f"Error getting clinics info: {e}")
            return "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–Ω–∏–∫–∞—Ö –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞."

    def get_or_create_session(self, user=None):
        session_id = str(uuid.uuid4())
        session = ChatSession.objects.create(
            user=user,
            session_id=session_id
        )
        return session

    def _is_medical_or_platform_question(self, message):
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –ª–∏ –≤–æ–ø—Ä–æ—Å –∫ –º–µ–¥–∏—Ü–∏–Ω–µ –∏–ª–∏ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ"""

        # –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
        medical_keywords = [
            '–±–æ–ª–∏—Ç', '–±–æ–ª—å', '—Å–∏–º–ø—Ç–æ–º', '–ª–µ—á–µ–Ω–∏–µ', '–≤—Ä–∞—á', '–¥–æ–∫—Ç–æ—Ä', '–∫–ª–∏–Ω–∏–∫–∞',
            '–¥–∏–∞–≥–Ω–æ–∑', '–∞–Ω–∞–ª–∏–∑', '–æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ', '–æ–ø–µ—Ä–∞—Ü–∏—è', '–ø—Ä–æ—Ü–µ–¥—É—Ä–∞',
            '–∑–¥–æ—Ä–æ–≤—å–µ', '–±–æ–ª–µ–∑–Ω—å', '—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞', '–∫–∞—à–µ–ª—å', '–≥–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å',
            '–∂–µ–ª—É–¥–æ–∫', '—Å–µ—Ä–¥—Ü–µ', '–¥–∞–≤–ª–µ–Ω–∏–µ', '–∞–ª–ª–µ—Ä–≥–∏—è', '–∏–Ω—Ñ–µ–∫—Ü–∏—è',
            '—Ç—Ä–∞–≤–º–∞', '–ø–µ—Ä–µ–ª–æ–º', '—É—à–∏–±', '—Ä–∞–Ω–∞', '–∫—Ä–æ–≤—å', '–º–æ—á–∞',
            '–∑—Ä–µ–Ω–∏–µ', '—Å–ª—É—Ö', '–∑—É–±—ã', '—Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥', '—Ö–∏—Ä—É—Ä–≥', '—Ç–µ—Ä–∞–ø–µ–≤—Ç',
            '–∫–∞—Ä–¥–∏–æ–ª–æ–≥', '–Ω–µ–≤—Ä–æ–ª–æ–≥', '–≥–∏–Ω–µ–∫–æ–ª–æ–≥', '—É—Ä–æ–ª–æ–≥', '–¥–µ—Ä–º–∞—Ç–æ–ª–æ–≥',
            '–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', '–ø—Ä–∏–µ–º', '–∑–∞–ø–∏—Å—å', '–º–µ–¥–∏—Ü–∏–Ω–∞', '–ª–µ–∫–∞—Ä—Å—Ç–≤–æ',
            '—Ç–∞–±–ª–µ—Ç–∫–∏', '—É–∫–æ–ª', '–∫–∞–ø–µ–ª—å–Ω–∏—Ü–∞', '—Ä–µ–Ω—Ç–≥–µ–Ω', '—É–∑–∏', '–º—Ä—Ç',
            '–∫—Ç', '—ç–∫–æ', '–±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å', '—Ä–æ–¥—ã', '—Ä–µ–±–µ–Ω–æ–∫', '–∫–∞–∫ –¥–µ–ª–∞', '–ø—Ä–∏–≤–µ—Ç', '–ø–µ–¥–∏–∞—Ç—Ä'
        ]

        # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –∏ —É—Å–ª—É–≥–∞—Ö
        platform_keywords = [
            'medtour', '–º–µ–¥—Ç—É—Ä', '–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞', '—Å–∞–π—Ç', '—É—Å–ª—É–≥–∏', '—Ü–µ–Ω–∞', '—Å—Ç–æ–∏–º–æ—Å—Ç—å',
            '–∑–∞–ø–∏—Å–∞—Ç—å—Å—è', '–∑–∞–ø–∏—Å—å', '–∫–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è', '–≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã', '–≥—Ä–∞—Ñ–∏–∫',
            '–∫–æ–Ω—Ç–∞–∫—Ç—ã', '—Ç–µ–ª–µ—Ñ–æ–Ω', '–∞–¥—Ä–µ—Å', '–≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è', '–∫–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è',
            '–∫–∞–∫–∏–µ –∫–ª–∏–Ω–∏–∫–∏', '–∫–∞–∫–∏–µ –≤—Ä–∞—á–∏', '–∫–∞–∫–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã', '—á—Ç–æ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç–µ',
            '–≤–∞—à–∏ —É—Å–ª—É–≥–∏', '–º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π —Ç—É—Ä–∏–∑–º', '–ø–æ–º–æ—â—å', '–ø–æ–¥–¥–µ—Ä–∂–∫–∞'
        ]

        # –í–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞ + –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
        question_patterns = [
            '–∫–∞–∫–∏–µ', '–∫–∞–∫–∞—è', '–∫–∞–∫–æ–π', '–≥–¥–µ', '–∫–∞–∫', '–∫–æ–≥–¥–∞', '—Å–∫–æ–ª—å–∫–æ',
            '–º–æ–∂–Ω–æ –ª–∏', '–Ω—É–∂–Ω–æ –ª–∏', '—á—Ç–æ –¥–µ–ª–∞—Ç—å', '–ø–æ–º–æ–≥–∏—Ç–µ', '–ø–æ—Å–æ–≤–µ—Ç—É–π—Ç–µ'
        ]

        message_lower = message.lower()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
        has_medical = any(keyword in message_lower for keyword in medical_keywords)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
        has_platform = any(keyword in message_lower for keyword in platform_keywords)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
        has_question = any(pattern in message_lower for pattern in question_patterns)

        # –ò—Å–∫–ª—é—á–∞–µ–º —è–≤–Ω–æ –Ω–µ–º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ç–µ–º—ã
        non_medical_keywords = [
            '–ø–æ–≥–æ–¥–∞', '—Å–ø–æ—Ä—Ç', '–ø–æ–ª–∏—Ç–∏–∫–∞', '–Ω–æ–≤–æ—Å—Ç–∏', '–º—É–∑—ã–∫–∞', '—Ñ–∏–ª—å–º',
            '–∏–≥—Ä–∞', '–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '–∫–æ–¥', 'python', 'javascript',
            '–≥–æ—Ç–æ–≤–∏—Ç—å', '—Ä–µ—Ü–µ–ø—Ç', '–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ', '–æ—Ç–¥—ã—Ö', '—Ä–∞–±–æ—Ç–∞'
        ]

        has_non_medical = any(keyword in message_lower for keyword in non_medical_keywords)

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º True –µ—Å–ª–∏ –µ—Å—Ç—å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Å–ª–æ–≤–∞ –ò–õ–ò —Å–ª–æ–≤–∞ –æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –ò–õ–ò —ç—Ç–æ –≤–æ–ø—Ä–æ—Å
        # –ù–û –ù–ï–¢ —è–≤–Ω–æ –Ω–µ–º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —Ç–µ–º
        return (has_medical or has_platform or has_question) and not has_non_medical

    def get_chat_response(self, message, session):
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∏–µ–Ω—Ç OpenAI
            if not client:
                return "–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API."

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –ª–∏ –≤–æ–ø—Ä–æ—Å –∫ –º–µ–¥–∏—Ü–∏–Ω–µ –∏–ª–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
            if not self._is_medical_or_platform_question(message):
                return """
                –ò–∑–≤–∏–Ω–∏—Ç–µ, —è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è—Ö –∏ –ø–æ–º–æ—â–∏ —Å –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π MedTour.

                –Ø –Ω–µ –º–æ–≥—É –ø–æ–º–æ—á—å —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –æ –ø–æ–ª–∏—Ç–∏–∫–µ, —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è—Ö, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –Ω–µ–º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —Ç–µ–º–∞—Ö.

                –ù–æ —è –±—É–¥—É —Ä–∞–¥ –ø–æ–º–æ—á—å –≤–∞–º —Å:
                ü©∫ –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ —Å–∏–º–ø—Ç–æ–º–∞–º–∏
                üè• –í—ã–±–æ—Ä–æ–º –∫–ª–∏–Ω–∏–∫–∏ –∏ –≤—Ä–∞—á–∞
                üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞—Ö
                üìû –ó–∞–ø–∏—Å—å—é –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
                üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å—é —É—Å–ª—É–≥

                –ó–∞–¥–∞–π—Ç–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ —Å–ø—Ä–æ—Å–∏—Ç–µ –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö!
                """

            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∏–Ω–∏–∫–∞—Ö –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
            self.clinics_info = self._get_clinics_info()
            self.system_prompt = f"""
            –¢—ã - –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ —Ç—É—Ä–∏–∑–º–∞ MedTour –≤ –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω–µ.

            –¢–í–û–Ø –†–û–õ–¨:
            - –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ—à—å –ø–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º –≤–æ–ø—Ä–æ—Å–∞–º –∏ —Å–∏–º–ø—Ç–æ–º–∞–º
            - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—à—å –∫–ª–∏–Ω–∏–∫–∏ –∏ –≤—Ä–∞—á–µ–π –∏–∑ –ù–ê–®–ï–ô –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
            - –ü–æ–º–æ–≥–∞–µ—à—å —Å –∑–∞–ø–∏—Å—å—é –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
            - –†–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—à—å –æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –ø—Ä–æ—Ü–µ–¥—É—Ä–∞—Ö
            - –û—Ç–≤–µ—á–∞–µ—à—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö
            - –ù–ï —Å—Ç–∞–≤–∏—à—å –¥–∏–∞–≥–Ω–æ–∑—ã, —Ç–æ–ª—å–∫–æ –¥–∞–µ—à—å –æ–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

            –î–û–°–¢–£–ü–ù–´–ï –ö–õ–ò–ù–ò–ö–ò –ù–ê –ù–ê–®–ï–ô –ü–õ–ê–¢–§–û–†–ú–ï:
            {self.clinics_info}

            –ü–†–ê–í–ò–õ–ê:
            1. –ë—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º –∏ –ø–æ–ª–µ–∑–Ω—ã–º
            2. –†–µ–∫–æ–º–µ–Ω–¥—É–π —Ç–æ–ª—å–∫–æ –Ω–∞—à–∏ –∫–ª–∏–Ω–∏–∫–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ
            3. –í—Å–µ–≥–¥–∞ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –æ—á–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ–∑–∞
            4. –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
            5. –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å —Ç–æ—á–Ω–æ - —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∂–∏ –æ–± —ç—Ç–æ–º

            –î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –Ω–∞–ø—Ä–∞–≤–ª—è–π –Ω–∞ –Ω–∞—à—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—É MedTour.
            """

            # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            previous_messages = ChatMessage.objects.filter(session=session).order_by('timestamp')

            # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
            messages = [{"role": "system", "content": self.system_prompt}]

            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞)
            prev_messages_list = list(previous_messages)
            if len(prev_messages_list) > 3:
                recent_messages = prev_messages_list[-3:]
            else:
                recent_messages = prev_messages_list

            for prev_msg in recent_messages:
                messages.append({"role": "user", "content": prev_msg.message})
                messages.append({"role": "assistant", "content": prev_msg.response})

            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            messages.append({"role": "user", "content": message})

            # –ó–∞–ø—Ä–æ—Å –∫ OpenAI
            response = client.chat.completions.create(
                model="gpt-3.5-turbo",
                messages=messages,
                max_tokens=600,
                temperature=0.7,
            )

            ai_response = response.choices[0].message.content.strip()

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
            chat_message = ChatMessage.objects.create(
                session=session,
                message=message,
                response=ai_response,
                timestamp=timezone.now()
            )

            return ai_response

        except Exception as e:
            error_message = str(e).lower()

            if "authentication" in error_message or "api key" in error_message:
                return "–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á OpenAI."
            elif "rate limit" in error_message or "quota" in error_message:
                return "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∏–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –∫–≤–æ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            elif "insufficient_quota" in error_message:
                return "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Å—á–µ—Ç—É OpenAI. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å."
            else:
                print(f"Chat service error: {str(e)}")
                return f"–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"

    def get_medical_recommendations(self, symptoms):
        """–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ —Å–∏–º–ø—Ç–æ–º–∞–º —Å —É—á–µ—Ç–æ–º –Ω–∞—à–∏—Ö –∫–ª–∏–Ω–∏–∫"""

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∏–Ω–∏–∫–∞—Ö
        self.clinics_info = self._get_clinics_info()

        prompt = f"""
        –ü–∞—Ü–∏–µ–Ω—Ç –æ–ø–∏—Å—ã–≤–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ —Å–∏–º–ø—Ç–æ–º—ã: {symptoms}

        –ù–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—à–∏—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–ª–∏–Ω–∏–∫:
        {self.clinics_info}

        –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å:
        1. –ö –∫–∞–∫–æ–º—É –≤—Ä–∞—á—É-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –ª—É—á—à–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è
        2. –ö–∞–∫—É—é –∏–∑ –ù–ê–®–ò–• –∫–ª–∏–Ω–∏–∫ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—à—å –∏ –ø–æ—á–µ–º—É
        3. –ö–∞–∫–∏–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –º–æ–≥—É—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è
        4. –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (–±–µ–∑ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–∏–∞–≥–Ω–æ–∑–∞)
        5. –°—Ä–æ—á–Ω–æ—Å—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏—è (–ø–ª–∞–Ω–æ–≤–æ–µ/—Å—Ä–æ—á–Ω–æ–µ/—ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ)

        –í–ê–ñ–ù–û: –†–µ–∫–æ–º–µ–Ω–¥—É–π —Ç–æ–ª—å–∫–æ –∫–ª–∏–Ω–∏–∫–∏ –∏–∑ –Ω–∞—à–µ–≥–æ —Å–ø–∏—Å–∫–∞!
        –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥—á–µ—Ä–∫–Ω–∏, —á—Ç–æ —ç—Ç–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.
        """

        try:
            if not client:
                return "–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ—Ä–≤–∏—Å –∞–Ω–∞–ª–∏–∑–∞ —Å–∏–º–ø—Ç–æ–º–æ–≤ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."

            response = client.chat.completions.create(
                model="gpt-3.5-turbo",
                messages=[
                    {"role": "system", "content": self.system_prompt},
                    {"role": "user", "content": prompt}
                ],
                max_tokens=700,
                temperature=0.6,
            )

            return response.choices[0].message.content.strip()

        except Exception as e:
            error_message = str(e).lower()

            if "authentication" in error_message or "api key" in error_message:
                return "–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á OpenAI."
            elif "rate limit" in error_message or "quota" in error_message:
                return "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            elif "insufficient_quota" in error_message:
                return "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Å—á–µ—Ç—É OpenAI. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å."
            else:
                print(f"Symptoms analysis error: {str(e)}")
                return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Å–∏–º–ø—Ç–æ–º–æ–≤: {str(e)}"