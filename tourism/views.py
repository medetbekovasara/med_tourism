from datetime import time, timedelta, datetime
from django.shortcuts import render, get_object_or_404, redirect
from django.contrib.auth.decorators import login_required
from .models import Clinic, Doctor, ConsultationBooking, Hotel
from .forms import ClinicBookingForm, HotelBookingForm, ConsultationBookingForm
from django.contrib import messages
from django.db.models import Q, CharField
from django.db.models.functions import Lower, Cast

# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
def home(request):
    clinics = Clinic.objects.all()[:3]  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ 3 –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö
    return render(request, 'home.html', {'clinics': clinics})

# üìç –°–ø–∏—Å–æ–∫ –∏ –¥–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–Ω–∏–∫–∞—Ö
def clinic_list(request):
    clinics = Clinic.objects.all()
    return render(request, 'tourism/clinic_list.html', {'clinics': clinics})

def clinic_detail(request, clinic_id):
    clinic = get_object_or_404(Clinic, id=clinic_id)
    return render(request, 'tourism/clinic_detail.html', {'clinic': clinic})

# üìç –°–ø–∏—Å–æ–∫ –∏ –¥–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ä–∞—á–∞—Ö
def doctor_list(request):
    doctors = Doctor.objects.all()
    return render(request, 'tourism/doctor_list.html', {'doctors': doctors})

def doctor_detail(request, doctor_id):
    doctor = get_object_or_404(Doctor, id=doctor_id)
    return render(request, 'tourism/doctor_detail.html', {'doctor': doctor})

def hotel_list(request):
    hotels = Hotel.objects.all()
    return render(request, 'tourism/hotel_list.html', {'hotels': hotels})

def hotel_detail(request, hotel_id):
    hotel = get_object_or_404(Hotel, pk=hotel_id)
    return render(request, 'tourism/hotel_detail.html', {'hotel': hotel})

# üìÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–Ω–∏–∫–∏
@login_required
def book_clinic(request):
    if request.method == 'POST':
        form = ClinicBookingForm(request.POST)
        if form.is_valid():
            booking = form.save(commit=False)
            booking.user = request.user
            booking.save()
            return redirect('user_profile')  # –ü–æ—Å–ª–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –ø—Ä–æ—Ñ–∏–ª—å
    else:
        form = ClinicBookingForm()
    return render(request, 'tourism/book_clinic.html', {'form': form})

@login_required
def book_hotel(request, hotel_id):
    hotel = get_object_or_404(Hotel, id=hotel_id)

    if request.method == 'POST':
        form = HotelBookingForm(request.POST)
        if form.is_valid():
            booking = form.save(commit=False)
            booking.user = request.user
            booking.hotel = hotel
            booking.save()
            return redirect('home')  # –∏–ª–∏ –∫—É–¥–∞ —Ç—ã —Ö–æ—á–µ—à—å
    else:
        form = HotelBookingForm()

    return render(request, 'tourism/hotel_booking.html', {'form': form, 'hotel': hotel})

@login_required
def book_consultation(request):
    if request.method == 'POST':
        form = ConsultationBookingForm(request.POST)
        if form.is_valid():
            selected_date = form.cleaned_data['date']
            selected_time = form.cleaned_data['time']
            doctor = form.cleaned_data['doctor']

            # üî¥ –ë–ª–æ–∫–∏—Ä—É–µ–º –≤—ã—Ö–æ–¥–Ω—ã–µ (—Å—É–±–±–æ—Ç–∞ –∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)
            if selected_date.weekday() in [5, 6]:
                messages.error(request, "–í –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω—ã.")
                return redirect('consultation_booking')

            # üî¥ –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å 10:00 –¥–æ 20:00
            if not (time(10, 0) <= selected_time <= time(20, 0)):
                messages.error(request, "–ú–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ —Å 10:00 –¥–æ 20:00.")
                return redirect('consultation_booking')

            # üî¥ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å—å –≤ —Ç–µ—á–µ–Ω–∏–µ 1 —á–∞—Å–∞
            one_hour_before = (datetime.combine(selected_date, selected_time) - timedelta(hours=1)).time()
            one_hour_after = (datetime.combine(selected_date, selected_time) + timedelta(hours=1)).time()

            if ConsultationBooking.objects.filter(
                doctor=doctor, date=selected_date,
                time__gte=one_hour_before, time__lt=one_hour_after
            ).exists():
                messages.error(request, "–≠—Ç–æ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∏–Ω—Ç–µ—Ä–≤–∞–ª —É–∂–µ –∑–∞–Ω—è—Ç. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π.")
                return redirect('consultation_booking')

            # ‚úÖ –ï—Å–ª–∏ –≤—Å—ë —Ö–æ—Ä–æ—à–æ, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å
            booking = form.save(commit=False)
            booking.user = request.user
            booking.save()
            messages.success(request, "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é!")
            return redirect('user_profile')

    else:
        form = ConsultationBookingForm()

    return render(request, 'tourism/book_consultation.html', {'form': form})


@login_required
def book_clinic(request):
    if request.method == 'POST':
        form = ClinicBookingForm(request.POST)
        if form.is_valid():
            selected_clinic = form.cleaned_data['clinic']
            selected_doctor = form.cleaned_data['doctor']
            selected_department = form.cleaned_data['department']
            selected_start_date = form.cleaned_data['start_date']  # ‚úÖ –ó–∞–º–µ–Ω–∏–ª–∏ `date` –Ω–∞ `start_date`
            selected_end_date = form.cleaned_data['end_date']  # ‚úÖ –î–æ–±–∞–≤–∏–ª–∏ `end_date`

            # üî¥ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–µ —Ä–∞–Ω—å—à–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞
            if selected_end_date < selected_start_date:
                messages.error(request, "–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–Ω—å—à–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞.")
                return redirect('clinic_booking')

            # ‚úÖ –ï—Å–ª–∏ –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –±—Ä–æ–Ω—å
            booking = form.save(commit=False)
            booking.user = request.user
            booking.save()
            messages.success(request, "–ö–ª–∏–Ω–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∞!")
            return redirect('user_profile')

    else:
        form = ClinicBookingForm()

    return render(request, 'tourism/book_clinic.html', {'form': form})


from django.db.models import Q
from .models import Doctor, Clinic

def search_results(request):
    query = request.GET.get('q', '').strip()

    doctors = Doctor.objects.filter(
        Q(name__icontains=query) | Q(specialty__icontains=query)
    )
    clinics = Clinic.objects.filter(
        Q(name__icontains=query) | Q(description__icontains=query)
    )

    return render(request, 'tourism/search_results.html', {
        'query': query,
        'doctors': doctors,
        'clinics': clinics,
    })

def about_view(request):
    return render(request, 'tourism/about.html')






